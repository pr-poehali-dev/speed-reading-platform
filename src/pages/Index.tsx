import { useState } from 'react';
import { Button } from '@/components/ui/button';
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';
import { Badge } from '@/components/ui/badge';
import { Progress } from '@/components/ui/progress';
import { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';
import { Input } from '@/components/ui/input';
import { Label } from '@/components/ui/label';
import { Textarea } from '@/components/ui/textarea';
import Icon from '@/components/ui/icon';

const Index = () => {
  const [isPaymentOpen, setIsPaymentOpen] = useState(false);
  const [isDemoOpen, setIsDemoOpen] = useState(false);
  const [isLoggedIn, setIsLoggedIn] = useState(false);
  const [password, setPassword] = useState('');
  const [homework, setHomework] = useState('');
  const [readingTest, setReadingTest] = useState('');
  const [demoStartTime, setDemoStartTime] = useState<number | null>(null);
  const [demoText, setDemoText] = useState('');
  const [demoQuestions, setDemoQuestions] = useState<{question: string, answers: string[], correct: number}[]>([]);
  const [currentQuestion, setCurrentQuestion] = useState(0);
  const [demoAnswers, setDemoAnswers] = useState<number[]>([]);
  const [demoFinished, setDemoFinished] = useState(false);
  const [readingSpeed, setReadingSpeed] = useState(0);

  const courses = [
    {
      id: 1,
      title: "–°–∫–æ—Ä–æ—á—Ç–µ–Ω–∏–µ: –û—Å–Ω–æ–≤—ã",
      description: "–ë–∞–∑–æ–≤—ã–µ —Ç–µ—Ö–Ω–∏–∫–∏ —É–≤–µ–ª–∏—á–µ–Ω–∏—è —Å–∫–æ—Ä–æ—Å—Ç–∏ —á—Ç–µ–Ω–∏—è –≤ 3 —Ä–∞–∑–∞",
      duration: "4 –Ω–µ–¥–µ–ª–∏",
      lessons: 12,
      price: "1000‚ÇΩ",
      level: "–ù–∞—á–∏–Ω–∞—é—â–∏–π",
      features: ["–¢–µ—Ö–Ω–∏–∫–∏ –∫–æ–Ω—Ü–µ–Ω—Ç—Ä–∞—Ü–∏–∏", "–£–ø—Ä–∞–∂–Ω–µ–Ω–∏—è –¥–ª—è –≥–ª–∞–∑", "–¢–µ—Å—Ç—ã —Å–∫–æ—Ä–æ—Å—Ç–∏"]
    },
    {
      id: 2,
      title: "–ü—Ä–æ–¥–≤–∏–Ω—É—Ç–æ–µ –°–∫–æ—Ä–æ—á—Ç–µ–Ω–∏–µ",
      description: "–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–µ –º–µ—Ç–æ–¥—ã —Ä–∞–±–æ—Ç—ã —Å —Ç–µ–∫—Å—Ç–æ–º",
      duration: "6 –Ω–µ–¥–µ–ª—å",
      lessons: 18,
      price: "1000‚ÇΩ",
      level: "–ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π",
      features: ["–î–∏–∞–≥–æ–Ω–∞–ª—å–Ω–æ–µ —á—Ç–µ–Ω–∏–µ", "–§–æ—Ç–æ—á—Ç–µ–Ω–∏–µ", "–†–∞–±–æ—Ç–∞ —Å —Ç–∞–±–ª–∏—Ü–∞–º–∏"]
    },
    {
      id: 3,
      title: "–°–∫–æ—Ä–æ—á—Ç–µ–Ω–∏–µ –¥–ª—è IT",
      description: "–ë—ã—Å—Ç—Ä–æ–µ —É—Å–≤–æ–µ–Ω–∏–µ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–π –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏",
      duration: "8 –Ω–µ–¥–µ–ª—å",
      lessons: 24,
      price: "1000‚ÇΩ",
      level: "–°–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π",
      features: ["–ß—Ç–µ–Ω–∏–µ –∫–æ–¥–∞", "API –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è", "–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –ª–∏—Ç–µ—Ä–∞—Ç—É—Ä–∞"]
    }
  ];

  const handlePayment = () => {
    setIsPaymentOpen(true);
  };

  const checkPassword = () => {
    if (password === '1234') {
      setIsLoggedIn(true);
      setIsPaymentOpen(false);
      setPassword('');
    } else {
      alert('–ù–µ–≤–µ—Ä–Ω—ã–π –ø–∞—Ä–æ–ª—å –¥–æ—Å—Ç—É–ø–∞!');
    }
  };

  const startDemo = () => {
    const text = `–°–∫–æ—Ä–æ—á—Ç–µ–Ω–∏–µ ‚Äî —ç—Ç–æ –Ω–∞–≤—ã–∫ –±—ã—Å—Ç—Ä–æ–≥–æ –≤–æ—Å–ø—Ä–∏—è—Ç–∏—è –∏ –ø–æ–Ω–∏–º–∞–Ω–∏—è —Ç–µ–∫—Å—Ç–æ–≤–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –±–µ–∑ –ø–æ—Ç–µ—Ä–∏ –∫–∞—á–µ—Å—Ç–≤–∞ —É—Å–≤–æ–µ–Ω–∏—è –º–∞—Ç–µ—Ä–∏–∞–ª–∞. –û–±—ã—á–Ω—ã–π —á–µ–ª–æ–≤–µ–∫ —á–∏—Ç–∞–µ—Ç —Å–æ —Å–∫–æ—Ä–æ—Å—Ç—å—é 200-250 —Å–ª–æ–≤ –≤ –º–∏–Ω—É—Ç—É, –ø—Ä–∏ —ç—Ç–æ–º —É—Å–≤–∞–∏–≤–∞–µ—Ç –æ–∫–æ–ª–æ 60-70% –ø—Ä–æ—á–∏—Ç–∞–Ω–Ω–æ–≥–æ. 

–û–¥–Ω–∞–∫–æ —Å –ø–æ–º–æ—â—å—é —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã—Ö —Ç–µ—Ö–Ω–∏–∫ –º–æ–∂–Ω–æ —É–≤–µ–ª–∏—á–∏—Ç—å —Å–∫–æ—Ä–æ—Å—Ç—å —á—Ç–µ–Ω–∏—è –¥–æ 800-1200 —Å–ª–æ–≤ –≤ –º–∏–Ω—É—Ç—É, —Å–æ—Ö—Ä–∞–Ω–∏–≤ –ø–æ–Ω–∏–º–∞–Ω–∏–µ –Ω–∞ —É—Ä–æ–≤–Ω–µ 80-90%. –û—Å–Ω–æ–≤–Ω—ã–µ –ø—Ä–∏–Ω—Ü–∏–ø—ã —Å–∫–æ—Ä–æ—á—Ç–µ–Ω–∏—è –≤–∫–ª—é—á–∞—é—Ç: —É—Å—Ç—Ä–∞–Ω–µ–Ω–∏–µ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–≥–æ –ø—Ä–æ–≥–æ–≤–∞—Ä–∏–≤–∞–Ω–∏—è, —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ —É–≥–ª–∞ –∑—Ä–µ–Ω–∏—è, —Ä–∞–±–æ—Ç—É —Å –∫–ª—é—á–µ–≤—ã–º–∏ —Å–ª–æ–≤–∞–º–∏ –∏ —Ä–∞–∑–≤–∏—Ç–∏–µ –ø–µ—Ä–∏—Ñ–µ—Ä–∏—á–µ—Å–∫–æ–≥–æ –∑—Ä–µ–Ω–∏—è.

–í–∞–∂–Ω–æ –ø–æ–Ω–∏–º–∞—Ç—å, —á—Ç–æ —Å–∫–æ—Ä–æ—á—Ç–µ–Ω–∏–µ ‚Äî —ç—Ç–æ –Ω–µ –ø—Ä–æ—Å—Ç–æ –±—ã—Å—Ç—Ä–æ–µ –ø–µ—Ä–µ–ª–∏—Å—Ç—ã–≤–∞–Ω–∏–µ —Å—Ç—Ä–∞–Ω–∏—Ü, –∞ —Å–∏—Å—Ç–µ–º–Ω—ã–π –ø–æ–¥—Ö–æ–¥ –∫ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏. –ú–æ–∑–≥ —á–µ–ª–æ–≤–µ–∫–∞ —Å–ø–æ—Å–æ–±–µ–Ω –≤–æ—Å–ø—Ä–∏–Ω–∏–º–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –∑–Ω–∞—á–∏—Ç–µ–ª—å–Ω–æ –±—ã—Å—Ç—Ä–µ–µ, —á–µ–º –º—ã –ø—Ä–∏–≤—ã–∫–ª–∏ —á–∏—Ç–∞—Ç—å. –°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ç–µ—Ö–Ω–∏–∫–∏ —Å–∫–æ—Ä–æ—á—Ç–µ–Ω–∏—è –æ—Å–Ω–æ–≤–∞–Ω—ã –Ω–∞ –Ω–∞—É—á–Ω—ã—Ö –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è—Ö —Ä–∞–±–æ—Ç—ã –º–æ–∑–≥–∞ –∏ –∑—Ä–∏—Ç–µ–ª—å–Ω–æ–≥–æ –≤–æ—Å–ø—Ä–∏—è—Ç–∏—è.`;
    
    const questions = [
      {
        question: "–ö–∞–∫–æ–≤–∞ –æ–±—ã—á–Ω–∞—è —Å–∫–æ—Ä–æ—Å—Ç—å —á—Ç–µ–Ω–∏—è —á–µ–ª–æ–≤–µ–∫–∞?",
        answers: ["100-150 —Å–ª–æ–≤/–º–∏–Ω", "200-250 —Å–ª–æ–≤/–º–∏–Ω", "300-400 —Å–ª–æ–≤/–º–∏–Ω", "500-600 —Å–ª–æ–≤/–º–∏–Ω"],
        correct: 1
      },
      {
        question: "–î–æ –∫–∞–∫–æ–π —Å–∫–æ—Ä–æ—Å—Ç–∏ –º–æ–∂–Ω–æ —É–≤–µ–ª–∏—á–∏—Ç—å —á—Ç–µ–Ω–∏–µ —Å –ø–æ–º–æ—â—å—é —Ç–µ—Ö–Ω–∏–∫?",
        answers: ["400-500 —Å–ª–æ–≤/–º–∏–Ω", "600-700 —Å–ª–æ–≤/–º–∏–Ω", "800-1200 —Å–ª–æ–≤/–º–∏–Ω", "1500-2000 —Å–ª–æ–≤/–º–∏–Ω"],
        correct: 2
      },
      {
        question: "–ö–∞–∫–æ–π –ø—Ä–∏–Ω—Ü–∏–ø –ù–ï –æ—Ç–Ω–æ—Å–∏—Ç—Å—è –∫ –æ—Å–Ω–æ–≤–∞–º —Å–∫–æ—Ä–æ—á—Ç–µ–Ω–∏—è?",
        answers: ["–£—Å—Ç—Ä–∞–Ω–µ–Ω–∏–µ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–≥–æ –ø—Ä–æ–≥–æ–≤–∞—Ä–∏–≤–∞–Ω–∏—è", "–†–∞—Å—à–∏—Ä–µ–Ω–∏–µ —É–≥–ª–∞ –∑—Ä–µ–Ω–∏—è", "–ú–µ–¥–ª–µ–Ω–Ω–æ–µ –∏ –≤–¥—É–º—á–∏–≤–æ–µ —á—Ç–µ–Ω–∏–µ", "–†–∞–±–æ—Ç–∞ —Å –∫–ª—é—á–µ–≤—ã–º–∏ —Å–ª–æ–≤–∞–º–∏"],
        correct: 2
      }
    ];
    
    setDemoText(text);
    setDemoQuestions(questions);
    setCurrentQuestion(0);
    setDemoAnswers([]);
    setDemoFinished(false);
    setReadingSpeed(0);
    setIsDemoOpen(true);
    setDemoStartTime(Date.now());
  };

  const finishReading = () => {
    if (demoStartTime) {
      const timeSpent = (Date.now() - demoStartTime) / 1000 / 60; // –≤ –º–∏–Ω—É—Ç–∞—Ö
      const wordCount = demoText.split(' ').length;
      const speed = Math.round(wordCount / timeSpent);
      setReadingSpeed(speed);
    }
  };

  const selectAnswer = (answerIndex: number) => {
    const newAnswers = [...demoAnswers];
    newAnswers[currentQuestion] = answerIndex;
    setDemoAnswers(newAnswers);
    
    if (currentQuestion < demoQuestions.length - 1) {
      setCurrentQuestion(currentQuestion + 1);
    } else {
      // –ó–∞–≤–µ—Ä—à–∞–µ–º —Ç–µ—Å—Ç
      const correct = demoQuestions.filter((q, i) => q.correct === newAnswers[i]).length;
      const percentage = Math.round((correct / demoQuestions.length) * 100);
      setDemoFinished(true);
      alert(`–¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à—ë–Ω!\n–í–∞—à–∞ —Å–∫–æ—Ä–æ—Å—Ç—å: ${readingSpeed} —Å–ª–æ–≤/–º–∏–Ω\n–ü–æ–Ω–∏–º–∞–Ω–∏–µ: ${percentage}%\n\n–≠—Ç–æ –æ—Ç–ª–∏—á–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç –¥–ª—è –Ω–∞—á–∞–ª–∞!`);
    }
  };

  const checkHomework = () => {
    if (homework.trim()) {
      alert("‚úÖ –î–æ–º–∞—à–Ω–µ–µ –∑–∞–¥–∞–Ω–∏–µ –ø—Ä–æ–≤–µ—Ä–µ–Ω–æ!\n–û—Ü–µ–Ω–∫–∞: –û—Ç–ª–∏—á–Ω–æ\n–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: –•–æ—Ä–æ—à–µ–µ –ø–æ–Ω–∏–º–∞–Ω–∏–µ –º–∞—Ç–µ—Ä–∏–∞–ª–∞");
    }
  };

  return (
    <div className="min-h-screen bg-gradient-to-br from-[#1A1D29] via-[#0066FF]/10 to-[#00D4AA]/5">
      {/* Header */}
      <nav className="border-b border-[#0066FF]/20 bg-[#1A1D29]/80 backdrop-blur-md sticky top-0 z-50">
        <div className="container mx-auto px-4 py-4">
          <div className="flex items-center justify-between">
            <div className="flex items-center space-x-2">
              <div className="w-8 h-8 bg-gradient-to-r from-[#0066FF] to-[#00D4AA] rounded-lg flex items-center justify-center">
                <Icon name="Brain" size={20} className="text-white" />
              </div>
              <span className="text-2xl font-bold bg-gradient-to-r from-[#0066FF] to-[#00D4AA] bg-clip-text text-transparent">
                SpeedRead.AI
              </span>
            </div>
            <Button 
              onClick={() => setIsPaymentOpen(true)}
              className="bg-gradient-to-r from-[#0066FF] to-[#00D4AA] hover:from-[#0052CC] hover:to-[#00B8AA] text-white border-0"
            >
              <Icon name="CreditCard" size={16} className="mr-2" />
              –ü–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç—É–ø
            </Button>
          </div>
        </div>
      </nav>

      {/* Hero Section */}
      <section className="relative py-20 overflow-hidden">
        <div className="absolute inset-0 bg-gradient-to-r from-[#0066FF]/10 to-[#00D4AA]/10" />
        <div className="container mx-auto px-4 relative z-10">
          <div className="grid lg:grid-cols-2 gap-12 items-center">
            <div className="text-center lg:text-left">
              <Badge className="mb-6 bg-[#0066FF]/20 text-[#0066FF] border-[#0066FF]/30">
                üöÄ AI-Powered Learning
              </Badge>
              <h1 className="text-5xl lg:text-6xl font-bold mb-6 text-white leading-tight">
                –£–≤–µ–ª–∏—á—å —Å–∫–æ—Ä–æ—Å—Ç—å
                <span className="bg-gradient-to-r from-[#0066FF] to-[#00D4AA] bg-clip-text text-transparent">
                  {" "}—á—Ç–µ–Ω–∏—è –≤ 5 —Ä–∞–∑
                </span>
              </h1>
              <p className="text-xl text-gray-300 mb-8 leading-relaxed">
                –†–µ–≤–æ–ª—é—Ü–∏–æ–Ω–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ –æ–±—É—á–µ–Ω–∏—è —Å–∫–æ—Ä–æ—á—Ç–µ–Ω–∏—é —Å –ò–ò-–ø—Ä–æ–≤–µ—Ä–∫–æ–π –¥–æ–º–∞—à–Ω–∏—Ö –∑–∞–¥–∞–Ω–∏–π 
                –∏ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–º —Ç—Ä–µ–∫–∏–Ω–≥–æ–º –ø—Ä–æ–≥—Ä–µ—Å—Å–∞
              </p>
              <div className="flex flex-col sm:flex-row gap-4">
                <Button 
                  size="lg" 
                  onClick={handlePayment}
                  className="bg-gradient-to-r from-[#0066FF] to-[#00D4AA] hover:from-[#0052CC] hover:to-[#00B8AA] text-white text-lg px-8 py-6 border-0"
                >
                  <Icon name="Zap" size={20} className="mr-2" />
                  –ù–∞—á–∞—Ç—å –æ–±—É—á–µ–Ω–∏–µ –∑–∞ 1000‚ÇΩ
                </Button>
                <Button 
                  variant="outline" 
                  size="lg"
                  onClick={startDemo}
                  className="border-[#0066FF] text-[#0066FF] hover:bg-[#0066FF] hover:text-white text-lg px-8 py-6"
                >
                  <Icon name="Play" size={20} className="mr-2" />
                  –î–µ–º–æ —É—Ä–æ–∫
                </Button>
              </div>
            </div>
            <div className="relative">
              <div className="relative z-10">
                <img 
                  src="/img/9d0b0923-20c5-48f8-acaa-0683843d4ccf.jpg" 
                  alt="AI Brain for Speed Reading" 
                  className="w-full h-auto rounded-2xl shadow-2xl border border-[#0066FF]/30"
                />
              </div>
              <div className="absolute -inset-4 bg-gradient-to-r from-[#0066FF]/20 to-[#00D4AA]/20 rounded-3xl blur-xl opacity-60" />
            </div>
          </div>
        </div>
      </section>

      {/* Stats Section */}
      <section className="py-16 border-y border-[#0066FF]/20 bg-white/5">
        <div className="container mx-auto px-4">
          <div className="grid grid-cols-2 lg:grid-cols-4 gap-8">
            {[
              { number: "5000+", label: "–í—ã–ø—É—Å–∫–Ω–∏–∫–æ–≤", icon: "Users" },
              { number: "500%", label: "–†–æ—Å—Ç —Å–∫–æ—Ä–æ—Å—Ç–∏", icon: "TrendingUp" },
              { number: "24/7", label: "–ò–ò –ø–æ–¥–¥–µ—Ä–∂–∫–∞", icon: "Bot" },
              { number: "98%", label: "–£—Å–ø–µ—à–Ω–æ—Å—Ç—å", icon: "Award" }
            ].map((stat, index) => (
              <div key={index} className="text-center">
                <div className="w-16 h-16 bg-gradient-to-r from-[#0066FF] to-[#00D4AA] rounded-2xl flex items-center justify-center mx-auto mb-4 shadow-lg">
                  <Icon name={stat.icon as any} size={24} className="text-white" />
                </div>
                <div className="text-4xl font-bold bg-gradient-to-r from-[#0066FF] to-[#00D4AA] bg-clip-text text-transparent mb-2">{stat.number}</div>
                <div className="text-gray-200 font-medium text-lg">{stat.label}</div>
              </div>
            ))}
          </div>
        </div>
      </section>

      {/* Courses Section */}
      <section className="py-20">
        <div className="container mx-auto px-4">
          <div className="text-center mb-16">
            <Badge className="mb-6 bg-[#00D4AA]/20 text-[#00D4AA] border-[#00D4AA]/30">
              üíé –ü—Ä–µ–º–∏—É–º –∫—É—Ä—Å—ã
            </Badge>
            <h2 className="text-4xl font-bold text-white mb-6">–í—ã–±–µ—Ä–∏—Ç–µ —Å–≤–æ–π –ø—É—Ç—å –∫ –º–∞—Å—Ç–µ—Ä—Å—Ç–≤—É</h2>
            <p className="text-xl text-gray-300 max-w-2xl mx-auto">
              –ö–∞–∂–¥—ã–π –∫—É—Ä—Å –≤–∫–ª—é—á–∞–µ—Ç –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ–≥–æ –ò–ò-–Ω–∞—Å—Ç–∞–≤–Ω–∏–∫–∞ –∏ —Å–∏—Å—Ç–µ–º—É –ø—Ä–æ–≤–µ—Ä–∫–∏ –∑–∞–¥–∞–Ω–∏–π
            </p>
          </div>
          
          <div className="grid md:grid-cols-2 lg:grid-cols-3 gap-8">
            {courses.map((course) => (
              <Card key={course.id} className="bg-[#1A1D29]/80 border-[#0066FF]/30 hover:border-[#0066FF]/60 transition-all duration-300 hover:shadow-xl hover:shadow-[#0066FF]/20">
                <CardHeader>
                  <div className="flex justify-between items-start mb-4">
                    <Badge variant="outline" className="border-[#00D4AA] text-[#00D4AA]">
                      {course.level}
                    </Badge>
                    <div className="text-2xl font-bold text-[#0066FF]">{course.price}</div>
                  </div>
                  <CardTitle className="text-white text-xl">{course.title}</CardTitle>
                  <CardDescription className="text-gray-400">{course.description}</CardDescription>
                </CardHeader>
                <CardContent>
                  <div className="space-y-4">
                    <div className="flex justify-between text-sm text-gray-400">
                      <span>üìÖ {course.duration}</span>
                      <span>üìö {course.lessons} —É—Ä–æ–∫–æ–≤</span>
                    </div>
                    <div className="space-y-2">
                      {course.features.map((feature, index) => (
                        <div key={index} className="flex items-center text-sm text-gray-300">
                          <Icon name="Check" size={16} className="text-[#00D4AA] mr-2" />
                          {feature}
                        </div>
                      ))}
                    </div>
                    <Button 
                      onClick={handlePayment}
                      className="w-full bg-gradient-to-r from-[#0066FF] to-[#00D4AA] hover:from-[#0052CC] hover:to-[#00B8AA] text-white border-0"
                    >
                      –í—ã–±—Ä–∞—Ç—å –∫—É—Ä—Å
                    </Button>
                  </div>
                </CardContent>
              </Card>
            ))}
          </div>
        </div>
      </section>

      {/* Personal Cabinet Demo */}
      <section className="py-20 bg-gradient-to-r from-[#0066FF]/5 to-[#00D4AA]/5">
        <div className="container mx-auto px-4">
          <div className="text-center mb-16">
            <Badge className="mb-6 bg-[#0066FF]/20 text-[#0066FF] border-[#0066FF]/30">
              üéØ –õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç
            </Badge>
            <h2 className="text-4xl font-bold text-white mb-6">–í–∞—à –ø—Ä–æ–≥—Ä–µ—Å—Å –ø–æ–¥ –∫–æ–Ω—Ç—Ä–æ–ª–µ–º –ò–ò</h2>
            <p className="text-xl text-gray-300 max-w-2xl mx-auto">
              –î–µ–º–æ-–≤–µ—Ä—Å–∏—è –ª–∏—á–Ω–æ–≥–æ –∫–∞–±–∏–Ω–µ—Ç–∞ —Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π –¥–æ–º–∞—à–Ω–∏—Ö –∑–∞–¥–∞–Ω–∏–π
            </p>
          </div>

          <div className="max-w-4xl mx-auto">
            <Tabs defaultValue="progress" className="w-full">
              <TabsList className="grid w-full grid-cols-3 bg-[#1A1D29]/80 border border-[#0066FF]/30">
                <TabsTrigger value="progress" className="data-[state=active]:bg-[#0066FF] data-[state=active]:text-white">
                  üìä –ü—Ä–æ–≥—Ä–µ—Å—Å
                </TabsTrigger>
                <TabsTrigger value="homework" className="data-[state=active]:bg-[#0066FF] data-[state=active]:text-white">
                  üìù –î–æ–º–∞—à–∫–∞
                </TabsTrigger>
                <TabsTrigger value="tests" className="data-[state=active]:bg-[#0066FF] data-[state=active]:text-white">
                  üß™ –¢–µ—Å—Ç—ã
                </TabsTrigger>
              </TabsList>
              
              <TabsContent value="progress" className="mt-6">
                <Card className="bg-[#1A1D29]/80 border-[#0066FF]/30">
                  <CardHeader>
                    <CardTitle className="text-white flex items-center">
                      <Icon name="BarChart" size={24} className="mr-2 text-[#0066FF]" />
                      –í–∞—à –ø—Ä–æ–≥—Ä–µ—Å—Å –æ–±—É—á–µ–Ω–∏—è
                    </CardTitle>
                  </CardHeader>
                  <CardContent className="space-y-6">
                    <div>
                      <div className="flex justify-between mb-2">
                        <span className="text-gray-300">–°–∫–æ—Ä–æ—Å—Ç—å —á—Ç–µ–Ω–∏—è</span>
                        <span className="text-[#00D4AA] font-bold">450 —Å–ª–æ–≤/–º–∏–Ω (+280%)</span>
                      </div>
                      <Progress value={75} className="h-3" />
                    </div>
                    <div>
                      <div className="flex justify-between mb-2">
                        <span className="text-gray-300">–ü–æ–Ω–∏–º–∞–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞</span>
                        <span className="text-[#00D4AA] font-bold">92%</span>
                      </div>
                      <Progress value={92} className="h-3" />
                    </div>
                    <div>
                      <div className="flex justify-between mb-2">
                        <span className="text-gray-300">–ö–æ–Ω—Ü–µ–Ω—Ç—Ä–∞—Ü–∏—è</span>
                        <span className="text-[#00D4AA] font-bold">88%</span>
                      </div>
                      <Progress value={88} className="h-3" />
                    </div>
                  </CardContent>
                </Card>
              </TabsContent>
              
              <TabsContent value="homework" className="mt-6">
                <Card className="bg-[#1A1D29]/80 border-[#0066FF]/30">
                  <CardHeader>
                    <CardTitle className="text-white flex items-center">
                      <Icon name="PenTool" size={24} className="mr-2 text-[#0066FF]" />
                      –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ–º–∞—à–Ω–µ–≥–æ –∑–∞–¥–∞–Ω–∏—è
                    </CardTitle>
                    <CardDescription className="text-gray-400">
                      –ò–ò –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –≤–∞—à –æ—Ç–≤–µ—Ç –∏ –¥–∞—Å—Ç –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—É—é –æ–±—Ä–∞—Ç–Ω—É—é —Å–≤—è–∑—å
                    </CardDescription>
                  </CardHeader>
                  <CardContent className="space-y-4">
                    <div>
                      <Label htmlFor="homework" className="text-gray-300">
                        –ó–∞–¥–∞–Ω–∏–µ: –û–ø–∏—à–∏—Ç–µ 3 —Ç–µ—Ö–Ω–∏–∫–∏ —Å–∫–æ—Ä–æ—á—Ç–µ–Ω–∏—è, –∫–æ—Ç–æ—Ä—ã–µ –≤—ã –∏–∑—É—á–∏–ª–∏
                      </Label>
                      <Textarea
                        id="homework"
                        value={homework}
                        onChange={(e) => setHomework(e.target.value)}
                        placeholder="–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –æ—Ç–≤–µ—Ç –∑–¥–µ—Å—å..."
                        className="mt-2 bg-[#1A1D29] border-[#0066FF]/30 text-white placeholder-gray-500"
                        rows={6}
                      />
                    </div>
                    <Button 
                      onClick={checkHomework}
                      className="bg-gradient-to-r from-[#0066FF] to-[#00D4AA] hover:from-[#0052CC] hover:to-[#00B8AA] text-white border-0"
                    >
                      <Icon name="Send" size={16} className="mr-2" />
                      –û—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫—É –ò–ò
                    </Button>
                  </CardContent>
                </Card>
              </TabsContent>
              
              <TabsContent value="tests" className="mt-6">
                <Card className="bg-[#1A1D29]/80 border-[#0066FF]/30">
                  <CardHeader>
                    <CardTitle className="text-white flex items-center">
                      <Icon name="Timer" size={24} className="mr-2 text-[#0066FF]" />
                      –¢–µ—Å—Ç —Å–∫–æ—Ä–æ—Å—Ç–∏ —á—Ç–µ–Ω–∏—è
                    </CardTitle>
                  </CardHeader>
                  <CardContent className="space-y-4">
                    <div className="p-6 bg-[#0066FF]/10 rounded-lg border border-[#0066FF]/30">
                      <p className="text-gray-300 leading-relaxed mb-4">
                        –ü—Ä–æ—á–∏—Ç–∞–π—Ç–µ —Å–ª–µ–¥—É—é—â–∏–π —Ç–µ–∫—Å—Ç –∏ –æ—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã. –ó–∞—Å–µ–∫–∞–π—Ç–µ –≤—Ä–µ–º—è!
                      </p>
                      <p className="text-white text-lg leading-relaxed">
                        –°–∫–æ—Ä–æ—á—Ç–µ–Ω–∏–µ ‚Äî —ç—Ç–æ –Ω–∞–≤—ã–∫ –±—ã—Å—Ç—Ä–æ–≥–æ –≤–æ—Å–ø—Ä–∏—è—Ç–∏—è —Ç–µ–∫—Å—Ç–æ–≤–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏. 
                        –°—Ä–µ–¥–Ω—è—è —Å–∫–æ—Ä–æ—Å—Ç—å —á—Ç–µ–Ω–∏—è –≤–∑—Ä–æ—Å–ª–æ–≥–æ —á–µ–ª–æ–≤–µ–∫–∞ —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç 200-250 —Å–ª–æ–≤ –≤ –º–∏–Ω—É—Ç—É. 
                        –ü—Ä–∏ –ø–æ–º–æ—â–∏ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã—Ö —Ç–µ—Ö–Ω–∏–∫ –º–æ–∂–Ω–æ —É–≤–µ–ª–∏—á–∏—Ç—å —ç—Ç—É —Å–∫–æ—Ä–æ—Å—Ç—å –≤ 3-5 —Ä–∞–∑, 
                        —Å–æ—Ö—Ä–∞–Ω–∏–≤ –ø—Ä–∏ —ç—Ç–æ–º –≤—ã—Å–æ–∫–∏–π —É—Ä–æ–≤–µ–Ω—å –ø–æ–Ω–∏–º–∞–Ω–∏—è –ø—Ä–æ—á–∏—Ç–∞–Ω–Ω–æ–≥–æ.
                      </p>
                    </div>
                    <Input
                      placeholder="–°–∫–æ–ª—å–∫–æ —Å–ª–æ–≤ –≤ –º–∏–Ω—É—Ç—É –≤—ã –ø—Ä–æ—á–∏—Ç–∞–ª–∏?"
                      value={readingTest}
                      onChange={(e) => setReadingTest(e.target.value)}
                      className="bg-[#1A1D29] border-[#0066FF]/30 text-white placeholder-gray-500"
                    />
                    <Button 
                      className="bg-gradient-to-r from-[#0066FF] to-[#00D4AA] hover:from-[#0052CC] hover:to-[#00B8AA] text-white border-0"
                    >
                      <Icon name="CheckCircle" size={16} className="mr-2" />
                      –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç
                    </Button>
                  </CardContent>
                </Card>
              </TabsContent>
            </Tabs>
          </div>
        </div>
      </section>

      {/* Payment Modal */}
      {isPaymentOpen && (
        <div className="fixed inset-0 bg-black/50 backdrop-blur-sm flex items-center justify-center z-50 p-4">
          <Card className="w-full max-w-md bg-[#1A1D29] border-[#0066FF]/30">
            <CardHeader>
              <div className="flex items-center justify-between">
                <CardTitle className="text-white flex items-center">
                  <Icon name="CreditCard" size={24} className="mr-2 text-[#0066FF]" />
                  –î–æ—Å—Ç—É–ø –∫ –∫—É—Ä—Å–∞–º
                </CardTitle>
                <Button
                  variant="ghost"
                  size="sm"
                  onClick={() => {setIsPaymentOpen(false); setPassword('');}}
                  className="text-gray-400 hover:text-white"
                >
                  <Icon name="X" size={20} />
                </Button>
              </div>
            </CardHeader>
            <CardContent className="space-y-6">
              <div className="p-4 bg-[#0066FF]/10 rounded-lg border border-[#0066FF]/30">
                <h3 className="text-white font-semibold mb-2">–†–µ–∫–≤–∏–∑–∏—Ç—ã –¥–ª—è –æ–ø–ª–∞—Ç—ã:</h3>
                <div className="space-y-2 text-gray-300">
                  <div>üí≥ –ö–∞—Ä—Ç–∞: <span className="font-mono text-[#00D4AA]">2200701050607560</span></div>
                  <div>üí∞ –°—É–º–º–∞: <span className="text-[#0066FF] font-bold">1000‚ÇΩ</span></div>
                  <div>üìù –ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ: –°–∫–æ—Ä–æ—á—Ç–µ–Ω–∏–µ</div>
                </div>
              </div>
              
              <div className="space-y-4">
                <div>
                  <Label htmlFor="password" className="text-white mb-2 block">
                    –ü–∞—Ä–æ–ª—å –¥–æ—Å—Ç—É–ø–∞ (–ø–æ–ª—É—á–∏—Ç–µ –ø–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã):
                  </Label>
                  <Input
                    id="password"
                    type="password"
                    value={password}
                    onChange={(e) => setPassword(e.target.value)}
                    placeholder="–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å"
                    className="bg-[#0F1419] border-[#0066FF]/30 text-white placeholder-gray-500"
                    onKeyPress={(e) => e.key === 'Enter' && checkPassword()}
                  />
                </div>
                
                <Button
                  onClick={checkPassword}
                  className="w-full bg-gradient-to-r from-[#0066FF] to-[#00D4AA] hover:from-[#0052CC] hover:to-[#00B8AA] text-white border-0"
                  disabled={!password}
                >
                  <Icon name="Unlock" size={20} className="mr-2" />
                  –í–æ–π—Ç–∏ –≤ –∫–∞–±–∏–Ω–µ—Ç
                </Button>
              </div>
              
              <div className="text-center">
                <p className="text-gray-400 text-sm">
                  üí° –ü–∞—Ä–æ–ª—å –ø—Ä–∏–¥—ë—Ç —Å—Ä–∞–∑—É –ø–æ—Å–ª–µ –ø–µ—Ä–µ–≤–æ–¥–∞ –Ω–∞ —É–∫–∞–∑–∞–Ω–Ω—É—é –∫–∞—Ä—Ç—É
                </p>
              </div>
            </CardContent>
          </Card>
        </div>
      )}

      {/* Personal Dashboard */}
      {isLoggedIn && (
        <div className="fixed inset-0 bg-[#0F1419] z-50 overflow-y-auto">
          <div className="container mx-auto px-4 py-8">
            {/* Header */}
            <div className="flex items-center justify-between mb-8">
              <h1 className="text-3xl font-bold text-white flex items-center">
                <Icon name="BookOpen" size={32} className="mr-3 text-[#0066FF]" />
                –õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç
              </h1>
              <Button
                variant="outline"
                onClick={() => setIsLoggedIn(false)}
                className="border-[#0066FF]/30 text-[#0066FF] hover:bg-[#0066FF] hover:text-white"
              >
                <Icon name="LogOut" size={20} className="mr-2" />
                –í—ã–π—Ç–∏
              </Button>
            </div>

            {/* Progress Overview */}
            <div className="grid grid-cols-1 md:grid-cols-3 gap-6 mb-8">
              <Card className="bg-[#1A1D29] border-[#0066FF]/30">
                <CardContent className="p-6">
                  <div className="flex items-center justify-between mb-4">
                    <Icon name="Target" size={24} className="text-[#0066FF]" />
                    <Badge className="bg-[#0066FF]/20 text-[#0066FF] border-[#0066FF]/30">
                      –í –ø—Ä–æ—Ü–µ—Å—Å–µ
                    </Badge>
                  </div>
                  <h3 className="text-white font-semibold mb-2">–ü—Ä–æ–≥—Ä–µ—Å—Å –æ–±—É—á–µ–Ω–∏—è</h3>
                  <div className="space-y-2">
                    <div className="flex justify-between text-sm">
                      <span className="text-gray-400">–ü—Ä–æ–π–¥–µ–Ω–æ —É—Ä–æ–∫–æ–≤</span>
                      <span className="text-white">8 –∏–∑ 12</span>
                    </div>
                    <Progress value={67} className="h-2" />
                    <p className="text-gray-400 text-sm">67% –∑–∞–≤–µ—Ä—à–µ–Ω–æ</p>
                  </div>
                </CardContent>
              </Card>

              <Card className="bg-[#1A1D29] border-[#00D4AA]/30">
                <CardContent className="p-6">
                  <div className="flex items-center justify-between mb-4">
                    <Icon name="Zap" size={24} className="text-[#00D4AA]" />
                    <Badge className="bg-[#00D4AA]/20 text-[#00D4AA] border-[#00D4AA]/30">
                      +150%
                    </Badge>
                  </div>
                  <h3 className="text-white font-semibold mb-2">–°–∫–æ—Ä–æ—Å—Ç—å —á—Ç–µ–Ω–∏—è</h3>
                  <div className="space-y-2">
                    <div className="text-2xl font-bold text-[#00D4AA]">620 —Å–ª/–º–∏–Ω</div>
                    <p className="text-gray-400 text-sm">–ë—ã–ª–æ: 250 —Å–ª/–º–∏–Ω</p>
                  </div>
                </CardContent>
              </Card>

              <Card className="bg-[#1A1D29] border-[#FF6B6B]/30">
                <CardContent className="p-6">
                  <div className="flex items-center justify-between mb-4">
                    <Icon name="Brain" size={24} className="text-[#FF6B6B]" />
                    <Badge className="bg-[#FF6B6B]/20 text-[#FF6B6B] border-[#FF6B6B]/30">
                      –û—Ç–ª–∏—á–Ω–æ
                    </Badge>
                  </div>
                  <h3 className="text-white font-semibold mb-2">–ü–æ–Ω–∏–º–∞–Ω–∏–µ</h3>
                  <div className="space-y-2">
                    <div className="text-2xl font-bold text-[#FF6B6B]">89%</div>
                    <p className="text-gray-400 text-sm">–°—Ä–µ–¥–Ω–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç —Ç–µ—Å—Ç–æ–≤</p>
                  </div>
                </CardContent>
              </Card>
            </div>

            {/* Course Content */}
            <div className="grid grid-cols-1 lg:grid-cols-2 gap-8">
              {/* Lessons */}
              <Card className="bg-[#1A1D29] border-[#0066FF]/30">
                <CardHeader>
                  <CardTitle className="text-white flex items-center">
                    <Icon name="PlayCircle" size={24} className="mr-2 text-[#0066FF]" />
                    –£—Ä–æ–∫–∏ –∫—É—Ä—Å–∞
                  </CardTitle>
                </CardHeader>
                <CardContent className="space-y-4">
                  {[
                    { id: 1, title: "–û—Å–Ω–æ–≤—ã —Å–∫–æ—Ä–æ—á—Ç–µ–Ω–∏—è", completed: true, duration: "15 –º–∏–Ω" },
                    { id: 2, title: "–£—Å—Ç—Ä–∞–Ω–µ–Ω–∏–µ –ø—Ä–æ–≥–æ–≤–∞—Ä–∏–≤–∞–Ω–∏—è", completed: true, duration: "20 –º–∏–Ω" },
                    { id: 3, title: "–†–∞—Å—à–∏—Ä–µ–Ω–∏–µ —É–≥–ª–∞ –∑—Ä–µ–Ω–∏—è", completed: true, duration: "25 –º–∏–Ω" },
                    { id: 4, title: "–¢–µ—Ö–Ω–∏–∫–∏ –∫–æ–Ω—Ü–µ–Ω—Ç—Ä–∞—Ü–∏–∏", completed: false, duration: "18 –º–∏–Ω", current: true },
                    { id: 5, title: "–†–∞–±–æ—Ç–∞ —Å —Ç–∞–±–ª–∏—Ü–∞–º–∏", completed: false, duration: "22 –º–∏–Ω" }
                  ].map((lesson) => (
                    <div
                      key={lesson.id}
                      className={`p-4 rounded-lg border flex items-center justify-between ${
                        lesson.completed
                          ? 'bg-[#00D4AA]/10 border-[#00D4AA]/30'
                          : lesson.current
                          ? 'bg-[#0066FF]/10 border-[#0066FF]/30'
                          : 'bg-[#1A1D29] border-gray-700'
                      }`}
                    >
                      <div className="flex items-center">
                        <Icon
                          name={lesson.completed ? "CheckCircle" : lesson.current ? "Play" : "Lock"}
                          size={20}
                          className={`mr-3 ${
                            lesson.completed
                              ? 'text-[#00D4AA]'
                              : lesson.current
                              ? 'text-[#0066FF]'
                              : 'text-gray-500'
                          }`}
                        />
                        <div>
                          <h4 className="text-white font-medium">{lesson.title}</h4>
                          <p className="text-gray-400 text-sm">{lesson.duration}</p>
                        </div>
                      </div>
                      {lesson.current && (
                        <Button size="sm" className="bg-[#0066FF] hover:bg-[#0052CC] text-white">
                          –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å
                        </Button>
                      )}
                    </div>
                  ))}
                </CardContent>
              </Card>

              {/* Homework & Tests */}
              <div className="space-y-6">
                <Card className="bg-[#1A1D29] border-[#00D4AA]/30">
                  <CardHeader>
                    <CardTitle className="text-white flex items-center">
                      <Icon name="FileText" size={24} className="mr-2 text-[#00D4AA]" />
                      –î–æ–º–∞—à–Ω–∏–µ –∑–∞–¥–∞–Ω–∏—è
                    </CardTitle>
                  </CardHeader>
                  <CardContent>
                    <Textarea
                      value={homework}
                      onChange={(e) => setHomework(e.target.value)}
                      placeholder="–û–ø–∏—à–∏—Ç–µ —Å–≤–æ–π –ø—Ä–æ–≥—Ä–µ—Å—Å, —Ç—Ä—É–¥–Ω–æ—Å—Ç–∏ –∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫..."
                      className="bg-[#0F1419] border-[#00D4AA]/30 text-white placeholder-gray-500 min-h-[120px]"
                    />
                    <Button className="mt-4 w-full bg-[#00D4AA] hover:bg-[#00B8AA] text-white">
                      <Icon name="Send" size={20} className="mr-2" />
                      –û—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞–¥–∞–Ω–∏–µ
                    </Button>
                  </CardContent>
                </Card>

                <Card className="bg-[#1A1D29] border-[#FF6B6B]/30">
                  <CardHeader>
                    <CardTitle className="text-white flex items-center">
                      <Icon name="Timer" size={24} className="mr-2 text-[#FF6B6B]" />
                      –¢–µ—Å—Ç —Å–∫–æ—Ä–æ—Å—Ç–∏
                    </CardTitle>
                  </CardHeader>
                  <CardContent>
                    <div className="space-y-4">
                      <div className="flex justify-between items-center p-3 bg-[#FF6B6B]/10 rounded-lg">
                        <span className="text-white">–ü–æ—Å–ª–µ–¥–Ω–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç:</span>
                        <span className="text-[#FF6B6B] font-bold">620 —Å–ª/–º–∏–Ω</span>
                      </div>
                      <Button className="w-full bg-[#FF6B6B] hover:bg-[#FF5252] text-white">
                        <Icon name="Play" size={20} className="mr-2" />
                        –ù–∞—á–∞—Ç—å –Ω–æ–≤—ã–π —Ç–µ—Å—Ç
                      </Button>
                    </div>
                  </CardContent>
                </Card>
              </div>
            </div>
          </div>
        </div>
      )}

      {/* Demo Lesson Modal */}
      {isDemoOpen && (
        <div className="fixed inset-0 bg-black/50 backdrop-blur-sm flex items-center justify-center z-50 p-4">
          <Card className="w-full max-w-4xl bg-[#1A1D29] border-[#0066FF]/30 max-h-[90vh] overflow-y-auto">
            <CardHeader>
              <div className="flex items-center justify-between">
                <CardTitle className="text-white flex items-center">
                  <Icon name="Play" size={24} className="mr-2 text-[#0066FF]" />
                  –î–µ–º–æ —É—Ä–æ–∫: –û—Å–Ω–æ–≤—ã —Å–∫–æ—Ä–æ—á—Ç–µ–Ω–∏—è
                </CardTitle>
                <Button
                  variant="ghost"
                  size="sm"
                  onClick={() => setIsDemoOpen(false)}
                  className="text-gray-400 hover:text-white"
                >
                  <Icon name="X" size={20} />
                </Button>
              </div>
            </CardHeader>
            <CardContent className="space-y-6">
              {!demoFinished ? (
                <>
                  {currentQuestion === 0 && readingSpeed === 0 ? (
                    <div className="space-y-6">
                      <div className="p-6 bg-[#0066FF]/10 rounded-lg border border-[#0066FF]/30">
                        <div className="flex items-center justify-between mb-4">
                          <Badge className="bg-[#00D4AA]/20 text-[#00D4AA] border-[#00D4AA]/30">
                            üìñ –ß–∏—Ç–∞–π—Ç–µ –≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω–æ
                          </Badge>
                          <div className="text-[#0066FF] font-mono text-sm">
                            –°–ª–æ–≤: {demoText.split(' ').length}
                          </div>
                        </div>
                        <div className="text-white text-lg leading-relaxed whitespace-pre-line">
                          {demoText}
                        </div>
                      </div>
                      <div className="text-center">
                        <Button
                          onClick={finishReading}
                          size="lg"
                          className="bg-gradient-to-r from-[#0066FF] to-[#00D4AA] hover:from-[#0052CC] hover:to-[#00B8AA] text-white border-0"
                        >
                          <Icon name="CheckCircle" size={20} className="mr-2" />
                          –Ø –ø—Ä–æ—á–∏—Ç–∞–ª —Ç–µ–∫—Å—Ç
                        </Button>
                      </div>
                    </div>
                  ) : (
                    <div className="space-y-6">
                      <div className="flex items-center justify-between">
                        <h3 className="text-xl text-white">
                          –í–æ–ø—Ä–æ—Å {currentQuestion + 1} –∏–∑ {demoQuestions.length}
                        </h3>
                        <Badge className="bg-[#0066FF]/20 text-[#0066FF] border-[#0066FF]/30">
                          –°–∫–æ—Ä–æ—Å—Ç—å: {readingSpeed} —Å–ª–æ–≤/–º–∏–Ω
                        </Badge>
                      </div>
                      
                      <div className="p-6 bg-[#0066FF]/10 rounded-lg border border-[#0066FF]/30">
                        <h4 className="text-lg text-white mb-6">
                          {demoQuestions[currentQuestion]?.question}
                        </h4>
                        <div className="space-y-3">
                          {demoQuestions[currentQuestion]?.answers.map((answer, index) => (
                            <Button
                              key={index}
                              variant="outline"
                              className="w-full text-left justify-start p-4 h-auto border-[#0066FF]/30 text-gray-300 hover:bg-[#0066FF]/20 hover:text-white hover:border-[#0066FF]"
                              onClick={() => selectAnswer(index)}
                            >
                              <span className="bg-[#0066FF] text-white rounded-full w-6 h-6 flex items-center justify-center text-sm mr-3">
                                {String.fromCharCode(65 + index)}
                              </span>
                              {answer}
                            </Button>
                          ))}
                        </div>
                      </div>
                    </div>
                  )}
                </>
              ) : (
                <div className="text-center space-y-6">
                  <div className="w-20 h-20 bg-gradient-to-r from-[#0066FF] to-[#00D4AA] rounded-full flex items-center justify-center mx-auto">
                    <Icon name="Trophy" size={40} className="text-white" />
                  </div>
                  <h3 className="text-2xl font-bold text-white">
                    –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º —Å –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ–º –¥–µ–º–æ —É—Ä–æ–∫–∞!
                  </h3>
                  <div className="grid grid-cols-2 gap-6">
                    <div className="p-4 bg-[#0066FF]/10 rounded-lg border border-[#0066FF]/30">
                      <div className="text-2xl font-bold text-[#0066FF] mb-2">{readingSpeed}</div>
                      <div className="text-gray-300">—Å–ª–æ–≤/–º–∏–Ω</div>
                    </div>
                    <div className="p-4 bg-[#00D4AA]/10 rounded-lg border border-[#00D4AA]/30">
                      <div className="text-2xl font-bold text-[#00D4AA] mb-2">
                        {Math.round((demoQuestions.filter((q, i) => q.correct === demoAnswers[i]).length / demoQuestions.length) * 100)}%
                      </div>
                      <div className="text-gray-300">–ø–æ–Ω–∏–º–∞–Ω–∏–µ</div>
                    </div>
                  </div>
                  <p className="text-gray-300">
                    –û—Ç–ª–∏—á–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç! –í –ø–æ–ª–Ω—ã—Ö –∫—É—Ä—Å–∞—Ö –≤—ã –Ω–∞—É—á–∏—Ç–µ—Å—å —á–∏—Ç–∞—Ç—å –µ—â—ë –±—ã—Å—Ç—Ä–µ–µ.
                  </p>
                  <Button
                    onClick={handlePayment}
                    size="lg"
                    className="bg-gradient-to-r from-[#0066FF] to-[#00D4AA] hover:from-[#0052CC] hover:to-[#00B8AA] text-white border-0"
                  >
                    <Icon name="Rocket" size={20} className="mr-2" />
                    –ü–æ–ª—É—á–∏—Ç—å –ø–æ–ª–Ω—ã–π –¥–æ—Å—Ç—É–ø –∑–∞ 1000‚ÇΩ
                  </Button>
                </div>
              )}
            </CardContent>
          </Card>
        </div>
      )}
    </div>
  );
};

export default Index;